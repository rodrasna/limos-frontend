type Professional @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
  specialty: String
}

type Diet @model @auth(rules: [{allow: public}]) {
  id: ID!
  clientID: ID! @index(name: "byClient")
  client: String
  dateDelivery: AWSDate
  dateConsult: AWSDate
  timeRealization: String
  calories: Int
}

type Consult @model @auth(rules: [{allow: public}]) {
  id: ID!
  client: String
  Alternativas: String
  date: AWSDateTime
  place: String
  accept: Boolean
  clientID: ID! @index(name: "byClient")
  Client: Client @belongsTo(fields: ["clientID"])
}

type Plan @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  price: Float
}

type Client @model @auth(rules: [{allow: public}, {allow: private, provider: iam}]) {
  id: ID!
  firstName: String
  lastName: String
  lastConsult: AWSDate
  professional: String
  Plan: Plan @hasOne
  email: AWSEmail
  phoneNumber: AWSPhone
  assignedProfessional: Professional @hasOne
  Diets: [Consult] @hasMany(indexName: "byClient", fields: ["id"])
  Consults: [Consult] @hasMany(indexName: "byClient", fields: ["id"])
  weight: Float
  place: String
}
 